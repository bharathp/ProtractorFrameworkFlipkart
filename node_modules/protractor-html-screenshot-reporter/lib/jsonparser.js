var _ = require('underscore'),
    path = require('path'), 
    reporterOptions;
var passCount=0;
var failCount=0;
var scriptToAddInHtml ="<script src='http://code.jquery.com/jquery-1.9.1.js'></script>";
    scriptToAddInHtml +="  <script src='http://code.jquery.com/ui/1.10.4/jquery-ui.js'></script>";
scriptToAddInHtml += "<script type='text/javascript'>";
scriptToAddInHtml +="function showTrace(e){if(window.event.srcElement.parentElement.getElementsByClassName('traceinfo')[0].style.display == 'block'){";
scriptToAddInHtml +="window.event.srcElement.parentElement.getElementsByClassName('traceinfo')[0].style.display = 'none';}else{window.event.srcElement.parentElement.getElementsByClassName('traceinfo')[0].style.display = 'block';}}";
scriptToAddInHtml +="function openModal(imageSource){";

scriptToAddInHtml +="var myWindow = window.open('','screenshotWindow');";
scriptToAddInHtml +="myWindow.document.write('<img src=\"' +imageSource + '\" alt=\"screenshot\" />');}";
scriptToAddInHtml += "</script>";

var stylesToAddInHtml = "<style>";
stylesToAddInHtml+= "ul,li{margin-left:0;padding-left:0;width:100%;font-weight:bold;}";
stylesToAddInHtml+= "table{width:99%;text-align:left;border-spacing:0;border-collapse: separate;margin-bottom:5px;}";
stylesToAddInHtml+= "li{font-weight:bold;padding-left:5px;list-style:none;}";
stylesToAddInHtml+= "ul table li{font-weight: normal}";
stylesToAddInHtml+= "th,td{padding: 10px;border: 1px solid #000;}";
stylesToAddInHtml+= "td.desc-col{width:30%;}th.desc-col{width: 30%;}";
stylesToAddInHtml+= "td.status-col{width:10%;}th.status-col{width: 10%;}";
stylesToAddInHtml+= "td.browser-col{width:15%;}th.browser-col{width: 15%;}";
stylesToAddInHtml+= "td.os-col{width:10%;}th.os-col{width: 10%;}";
stylesToAddInHtml+= "td.msg-col{width:25%;}th.msg-col{width: 25%;}";
stylesToAddInHtml+= "table.header{background-color: gray; color: #fff;margin-left:10px;}";
stylesToAddInHtml+= "</style>";

var staticHTMLContentprefix = "<html><head><title>Test file reporter generated</title>"+stylesToAddInHtml+scriptToAddInHtml+" </head><body style='font-family:Arial;'>";
staticHTMLContentprefix +="<a href='http://www.zenq.com' target='_blank'><img src='http://zenq.com/Portals/0/logo.png'/></a>";
staticHTMLContentprefix +=  "<h2 style='display:inline' align='center'>Protractor Test Results</h2><hr/>";
staticHTMLContentprefix +="<div style='float:right;position:relative;width:100%;'><table class='header'>";
staticHTMLContentprefix +=  "<tr><th class='desc-col'>Description</th><th class='status-col'>Passed</th>";
staticHTMLContentprefix +=  "<th class='browser-col'>Browser</th>";
staticHTMLContentprefix +=  "<th class='os-col'>OS</th><th class='msg-col'>Message</th>";
staticHTMLContentprefix +=  "<th class='img-col'>Screenshot</th></tr></table>";

var staticHTMLContentpostfix = "</body></html>";

var passCount=0, failCount=0;
function generateHTML(data){
    data.passed? passCount++: failCount++;
	var passedval = data.passed? 'Pass':'Fail';
    var str = '<table><tr class="'+passedval+' '+data.browser.name+'">';
    str +=  '<td class="desc-col">' + data.desc + '</td>';
    var bgColor = data.passed? 'green': 'red';
	
    str +=  '<td class="status-col" style="color:#fff;background-color: '+ bgColor+'">' + data.passed + '</td>';
    str +=  '<td class="browser-col '+data.browser.name+'">' + data.browser.name+ ':' +data.browser.version + '</td>';
    str +=  '<td class="os-col">' + data.os + '</td>';
    var stackTraceInfo = data.passed? '': '<br/><a href="#" onclick="showTrace()">View Stack Trace Info</a><br/> <div class="traceinfo" style="display:none">' + data.trace + '</div>';

    str +=  '<td class="msg-col">' + data.message+ stackTraceInfo+ '</td>';

    if(!(reporterOptions.takeScreenShotsOnlyForFailedSpecs && data.passed)) {
        str +=  '<td class="img-col"><a href="#" onclick="openModal(\'' + path.basename(data.screenShotFile)+ '\')">View </a></td>';    
    }
    else{
        str +=  '<td class="img-col"></td>';   
    }
    
    str += '</tr></table>';
    return str;

}

function findDeep(items, attrs) {

    function match(value) {
        for (var key in attrs) {
            if (attrs[key] !== value[key]) {
                return false;
            }
        }

        return true;
    }

    function traverse(value) {
        var result;

        _.forEach(value, function (val) {
            if (val && match(val)) {
                result = val;
                return false;
            }

            if (_.isObject(val) || _.isArray(val)) {
                result = traverse(val);
            }

            if (result) {
                return false;
            }
        });

        return result;
    }

    return traverse(items);

}

var formattedJson = [];
var currentFormattedDataIndex = 0;

function formatData(element, descArr) {
    if (currentFormattedDataIndex === descArr.length - 1) {
        var lastValueWithContent = {
            desc: descArr[currentFormattedDataIndex],
            level: currentFormattedDataIndex,
            description: element.description,
            passed: element.passed,
            os: element.os,
            browser: element.browser,
            message: element.message,
            trace: element.trace,
            screenShotFile: element.screenShotFile
        };
        var parentDataForFinalValue = findDeep(formattedJson, {
            desc: descArr[currentFormattedDataIndex - 1],
            level: currentFormattedDataIndex - 1
        });
        if (parentDataForFinalValue) {
            parentDataForFinalValue.children = parentDataForFinalValue.children || [];
            parentDataForFinalValue.children.push(lastValueWithContent);
        }

        currentFormattedDataIndex = 0;
    } else {
        var currentdata = {
            desc: descArr[currentFormattedDataIndex],
            level: currentFormattedDataIndex
        };
        var existingDataWithSameConf = findDeep(formattedJson, currentdata);
        if (!existingDataWithSameConf) {
            if (currentFormattedDataIndex === 0) {
                currentdata.depth = descArr.length;
                formattedJson.push(currentdata);
            } else {
                var parentData = findDeep(formattedJson, {
                    desc: descArr[currentFormattedDataIndex - 1],
                    level: currentFormattedDataIndex - 1
                });
                if (parentData) {
                    parentData.children = parentData.children || [];
                    parentData.children.push(currentdata);
                }

            }

        }

        currentFormattedDataIndex++;
        formatData(element, descArr);
    }

}

function processJson(jsonData, options){
    passCount=0;
    failCount = 0;
    reporterOptions = options;
    var jsonStr = "<ul>";
    formattedJson = [];
    currentFormattedDataIndex = 0;

    _.each(jsonData, function (value) {
        var descArr = value.description.split('|').reverse();
        if (descArr.length > 0) {
            formatData(value, descArr);
        }
    });

    

    function parseJSON(element) {
        if(element.children){

            jsonStr += '<li>'+element.desc+ '<ul>';
            element.children.forEach(function (child, index, childArr) {
                if (child.children) {
                    parseJSON(child);
                }else{
                    var ss = generateHTML(child);
                    jsonStr += '<li>' + ss +'</li>';
                    if(index === childArr.length-1){
                        jsonStr += '</ul></li>';
                    }
                }
            });
            return jsonStr;
        }
        
    }

    var str = "";
    formattedJson.forEach(function (element) {
        jsonStr = "";
        str += parseJSON(element);
        str += new Array(element.depth-1).join('</ul></li>');

    });
    str = '<ul>' + str + '</ul>';
    str += "<div style='position:relative;float:left;'><h2><u>Results summary</u></h2>";
    str += "<b>Total tests passed</b>: "+ passCount +" <br/> <b>Total tests failed</b>: "+ failCount +" </div></div>";
    str +="<script src='http://code.jquery.com/jquery-1.9.1.js'></script>";
    str +="  <script src='http://code.jquery.com/ui/1.10.4/jquery-ui.js'></script>";
	str +="<div align='center' style='position:relative;clear:both;'><a href='#' id='changechart' style='display:block'>View Bar Chart</a></div>";
	str +="<div id='chart_div' align='center' style='width: 500px; height: 500px;margin-left: auto;  margin-right: auto;'></div>";
	str +="<div id='bar_chart' align='center' style='width: 500px; height: 500px;margin-left: auto;  margin-right: auto;'></div>";
	
    str +="<script type='text/javascript' src='https://www.google.com/jsapi'></script>"
    str += "<script type='text/javascript'>"
	str+="$(document).ready(function(){";
	str+="$('#chart_div').show();";
	str+="$('#bar_chart').hide();";
	str +="$('#changechart').click(function(){"
	str+="if($('#chart_div').is(':visible')) {";
	str+="$('#chart_div').hide();";
	str+="$('#bar_chart').show();";
	str+="$('#changechart').text('View Summary chart');}";
	str+="else{";
	str+="$('#chart_div').show();";
	str+="$('#bar_chart').hide();";
	str+="$('#changechart').text('View Bar Chart');}";
	str+=" });";
	str+="$('td.img-col').each(function(){";
str+="if($(this).children().length==0){$(this).text('No Screenshot');}";
str+="});";

	

 str+=" });";
 
    str += "google.load('visualization', '1', {packages:['corechart']});";
    str +="     google.setOnLoadCallback(drawChart);";
    str +="function drawChart() {";
    str +="var data = google.visualization.arrayToDataTable([";
    str +="['Task', 'List of Test Cases'],";
    str +="['Pass',     parseInt("+passCount+")],";
    str +="['Fail',      parseInt("+failCount+")]]);";
    str +=" var options = {";
    str +="title: 'Summary Chart',";
    str +=" backgroundColor: 'transparent'};";
    str +="var chart = new google.visualization.PieChart(document.getElementById('chart_div'));";
		str +="function selectHandler() {";
          str +="var selectedItem = chart.getSelection()[0];";
         str +=" if (selectedItem) {";
           str +="var topping = data.getValue(selectedItem.row, 0);";
            str +="if(topping.toLowerCase()==('Fail').toLowerCase())";
			str +="{";
			str +="if($('tr.Fail').length>0)";
		str +="	{";
			str +="$('tr.Fail').show();";
			
		
		str +="	$('tr.Pass').hide();}}";
		
			
			
			str +="if(topping.toLowerCase()==('Pass').toLowerCase()){";
			
			str +="if($('tr.Pass').length>0){";
			str +="$('tr.Pass').show();";
			
			str +="$('tr.Fail').hide();}}";
			
			
			
         str +=" }}";
        
	str +="google.visualization.events.addListener(chart, 'select', selectHandler); ";
    str +="chart.draw(data, options);}";
    str +="</script>";
	str += "<script type='text/javascript'>";
      str +="google.load('visualization', '1', {packages:['corechart']});";
      str +="google.setOnLoadCallback(drawChart);";
     str +=" function drawChart() {";
     str +=    "var data = google.visualization.arrayToDataTable([";
    str +="['Browser', 'Passed', 'Failed'],";
    str +="['Chrome',  $('.Pass.chrome').length,  $('.Fail.chrome').length],";
   str +=" ['Firefox',  $('.Pass.firefox').length,   $('.Fail.firefox').length],";
     str +=" ['Safari',  $('.Pass.safari').length,   $('.Fail.safari').length],";
    str +=" ['InternetExplorer',  $('.Pass.ie').length,   $('.Fail.ie').length]";
  str +="]);";
  

  // Create and draw the visualization.
  str +="new google.visualization.ColumnChart(document.getElementById('bar_chart')).draw(data,";
   str +="        {title:'Current Execution status',"
      str +="      width:500, height:400,";
      str +=     " hAxis: {title: 'Browser'},";
	  str+="vAxis: {direction:1,ticks:[1,2,$('td.os-col').length],minValue:1, title:'No. of test cases'}}";

      str +=");";
     str +=" }";
    str +="</script>";
	
    return staticHTMLContentprefix + str + staticHTMLContentpostfix;

}

module.exports = {
    processJson: processJson
};
